# -*- coding: utf-8 -*-"""Created on Tue Oct 06 11:13:33 2015turrle_test csvdataFramesql(dataFrame)dataFrameutildataFrameBarfeed.py dataFramefeed.pyarraypyalg_utils.pyvwanp @author: lenovo"""
from pyalgotrade import plotterfrom pyalgotrade.barfeed import yahoofeedfrom pyalgotrade.stratanalyzer import returns,sharpe,drawdown,tradesfrom datetime import datetimefrom matplotlib.pyplot import plot from compiler.ast import flattenimport pyalg_testimport constant as ctimport pandas as pd import jsonimport pyalg_utils,datadata_sqlfrom utils import dataFramefeed
def turtle_test(load_type = 'csv',dataString = 'pyalg'): if load_type =='csv': #Load the yahoo feed from the CSV file        feed = yahoofeed.Feed()        feed.addBarsFromCSV("orcl", "D:/data2/600687.csv") elif load_type =='dataFrame': #dataFrame        dat = pd.read_csv('d:/data/600687.csv',index_col=0,encoding='gbk')        feed = dataFramefeed.Feed()        feed.addBarsFromDataFrame("orcl", dat) elif load_type == 'sql': #        dat = data_sql.get_h_data('600848')        feed = dataFramefeed.Feed()        feed.addBarsFromDataFrame("orcl", dat)  # Evaluate the strategy with the feed's bars. #myStrategy = pyalg_test.SMACrossOver(feed, "orcl", 20)    myStrategy = pyalg_test.turtle(feed, "orcl",20,10) # Attach a returns analyzers to the strategy.    returnsAnalyzer = returns.Returns()    myStrategy.attachAnalyzer(returnsAnalyzer)  # Attach the plotter to the strategy.    plt = plotter.StrategyPlotter(myStrategy) # Plot the simple returns on each bar.    plt.getOrCreateSubplot("returns").addDataSeries("Simple returns", returnsAnalyzer.getReturns())    if dataString =='pyalg_util':        ds = pyalg_utils.dataSet(myStrategy)   #    myStrategy.run()    myStrategy.info("Final portfolio value: $%.2f" % myStrategy.getResult())  if dataString =='pyalg_util':        rs = ds.getDefault()       #dic        plot(rs["cumulativeReturns"][:,0],rs["cumulativeReturns"][:,1])  #     plt.plot()
def vwap(plot):    instrument = ["lenovo","mi"]    vwapWindowSize = 5    threshold = 0.01 # Download the bars.    feed = yahoofeed.Feed()    feed.addBarsFromCSV("lenovo", "D:/data2/600687.csv")    feed.addBarsFromCSV("mi", "D:/data2/600701.csv")
    strat = pyalg_test.VWAPMomentum(feed, instrument, vwapWindowSize, threshold)    sharpeRatioAnalyzer = sharpe.SharpeRatio()    strat.attachAnalyzer(sharpeRatioAnalyzer)
 if plot:        plt = plotter.StrategyPlotter(strat, True, True, True) #plt.getPortfolioSubplot().addDataSeries("vwap", strat.getVWAP()[instrument[-1]])    ds = pyalg_utils.dataSet(strat)   #    strat.run() print "Sharpe ratio: %.2f" % sharpeRatioAnalyzer.getSharpeRatio(0.05)
 if plot:        plt.plot()     rs = ds.getReturns()     #dic,   #for items in rs: # print items[0],items[1]
if __name__ == '__main__': #vwap(True)    turtle_test()