@@ -1,9 +1,6 @@
 `version.py` saves you from having to hard-code the version number of your

 project by getting it from git tags (directly or indirectly).

 

-The tags that are considered to be version numbers are those that start with

-a digit, or with a `v` followed by a digit.

-

 To use the script, simply copy it into your project and call `get_version()`

 in your `setup.py` file:

 
@@ -15,6 +12,10 @@ in your `setup.py` file:
         ...

     )

 

+By default the tags that are considered to be version numbers are those that

+start with a digit. If you use a prefix, for example a `v`, modify the `PREFIX`

+constant in `version.py` accordingly.

+

 You need to distribute the `version.py` file in your sdist packages

 by adding the following line in the `MANIFEST.in` file:

 
@@ -4,9 +4,10 @@
 import re

 from subprocess import CalledProcessError, check_output

 

-__all__ = ('get_version')

 

-tag_re = re.compile(r'\btag: v?([0-9][^,]*)\b')

+PREFIX = ''

+

+tag_re = re.compile(r'\btag: %s([0-9][^,]*)\b' % PREFIX)

 version_re = re.compile('^Version: (.+)$', re.M)

 

 
@@ -20,9 +21,9 @@ def get_version():
 

 if isdir(join(d, '.git')):

 # Get the version using "git describe".

-        cmd = 'git describe --tags --match [0-9]* --dirty'.split()

+        cmd = 'git describe --tags --match %s[0-9]* --dirty' % PREFIX

 try:

-            version = check_output(cmd).decode().strip()

+            version = check_output(cmd.split()).decode().strip()[len(PREFIX):]

 except CalledProcessError:

 raise RuntimeError('Unable to get version number from git tags')

 
